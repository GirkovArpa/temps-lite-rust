const DEBUGGING = false; 
DEBUGGING && view.connectToInspector && view.connectToInspector(rootElement, inspectorIpAddress);

$(#quit) << event click {
  view.close();
}

function updateDate() {
  const date = new Date();
  $(#time).text = root.TIME_FORMAT === "24h" 
    ? new Date().toString("%R")
    : date.toString("%I:%M ")
        .concat(date.hour / 12 ? "PM" : "AM");
  return true;
}

updateDate();

self.timer(1s, updateDate);

$(#military-time) << event click { 
  root.TIME_FORMAT = "24h";
  updateDate(); 
}
$(#normal-time) << event click { 
  root.TIME_FORMAT = "12h";
  updateDate();
}

async function initIcons() {
  for (var div in $$(.svg)) {
    var html = "";
    const [file] = await view.request { url: div.attributes["src"] };
    while (true) {
      const line = file.readln();
      if (line == undefined) break;
      html += line;
    }
    div.html = html.replace(/#FFFFFF/gi, "#444");
  }
}

initIcons();